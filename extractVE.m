function [binimg,rgbimg] = extractVE(DTSMModel,RGB,filtsize)
% extractVE 2012.07.21
% usage:[binimg,rgbimg,coverage] = extractVE(DTSMModel,RGB,filtsize);
% DTSMModel must be the model generated by EasyPCC;
% RGB must be a 3-dimentional rgb image;
% filtsize must be an integer;
% see the exmple.m for more useage
% by Oceam, The University of Tokyo
% last modified 2015.12.07
Mediasize=[5,5];
se = strel('diamond',1);
[S_y,S_x,S_z]=size(RGB);
RGB2=im2double(RGB);
%Hue Saturation Luminance/Intensity
HSV2 = rgb2hsv(RGB2);
cform = makecform('srgb2lab');
LAB2 = applycform(RGB2,cform);
    r=RGB2(:,:,1);
    g=RGB2(:,:,2);
    b=RGB2(:,:,3);
    h2=HSV2(:,:,1);
    s2=HSV2(:,:,2);
    v2=HSV2(:,:,3);    
    l1=LAB2(:,:,1);
    a1=LAB2(:,:,2);
    b1=LAB2(:,:,3);
    prrgb=[r(:),g(:),b(:)];
    prhsv=[h2(:),s2(:),v2(:)];
    prlab=[l1(:),a1(:),b1(:)];
    X=[prrgb prhsv prlab];
    % read cartmodle that already exist
    t=DTSMModel;
    tfit=predict(t,X);
%     tfit = t.eval(X);  %
    idx=strfind(tfit,'ground');
    idx2=cellfun(@isempty, idx);
    detected=reshape(idx2,S_y,S_x);
    %noise reduction
    [L,num]=bwlabel(detected,4);
    stats=regionprops(L,'Area');
    area=cat(1,stats.Area);
    ind3=find(area>filtsize);
    J=ismember(L,ind3);
    BW_FSB_out2=medfilt2(J,Mediasize);%figure,imshow(BW_FSB_out2);
    BW_FSB_out3=imopen(BW_FSB_out2,se);%figure,imshow(BW_FSB_out3);
    binimg=BW_FSB_out3;
    newrgb=im2double(RGB);
    newrgb(:,:,1)=newrgb(:,:,1).*binimg;
    newrgb(:,:,2)=newrgb(:,:,2).*binimg;
    newrgb(:,:,3)=newrgb(:,:,3).*binimg;
    rgbimg=newrgb;
%     coverage=sum(sum(binimg));
%     coverageR=sum(sum(binimg))/(S_y*S_x);
%     disp('finished process :');
   
end

